<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAC1SURBVDhPzZIxCgIxEEUH1NY7WbmCYCUKnkYtLS28gwfx
        NOmSFCJs9mWZIGajq5X74TM7k/8/mzAyDIQQRs65hbV2/Q3RVtGjdhGGR4bhF+LZq12EwTVS21509MMP
        4L5bHm2ibX8Aho0xZqrfO1jDU3sIPgYgnMEHvHnvV9Q7Z/HVa+oy17dIA35zTD2nPichl3iV1Ku9kNiD
        jp7kA4Piwrwjnuci6SpXDIurmxPt/GWV/wiRBo1Fh/y3w1whAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAElSURBVDhPzVI9S8RAFFzIW4/jKkFsrvU3aCEoovjxA8TS
        36K2Bxb+ijv/x1UWdtYWssltAlZp15n1vZATwtnpwJB9m5l5L5t1/wMppaJpmivw2hhC2NXXGdg7hG5L
        y3Xg5QOYjHVdR4ilFJlX3seyKE4ROPlwbgf1shJ5r8fjqdpzwILUsgPEKzCBbfD+BoGvWqeVyJHKhgPY
        mWYz9fiokm8MBRDs3Ddjimfu4zPPs4AYCvh0brv0/qUfALaY7GztQH8GWDrESzOyM81at9VotJfFRD8g
        xniC9RvXPG015G9mZwsJIvvcy7AA/jo8nzDBHJzyV+G0j6nhVBybnWE+yEaDBWi5EQi7BWda5oB7sLtI
        v+Sd2rurfAl2V3kDL+hR+5/CuS96skZMSpt7QwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALgAAAC4AAAAuAAAALgAA
        AC4AAAAuAAAALgAAAC4AAAAuAAAALgAAAC4AAAAuAAAALgAAAC4AAAAuAAAALgAAAC4AAAAuAAAALgAA
        AC4AAAAQAAAAAAAAAAAAAAAhAAAALgAAAC4AAAAuAAAALgAAAC4AAAAuAAAALgAAAC4AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAFwAAAAAAAAAAAAAALkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAXAAAAAAAAAAAAAAAuQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABcAAAAAAAAAAAAAAC5AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAFkAAAAAAAAAAAAAALsAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA+wAAAL0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD5AAAAIAAAAAAAAAAAAAAA2AAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAC9AAAAIQAAAOAAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+wAAAGMAAAAAAAAAAAAA
        ACkAAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA4AAAACEAAAAAAAAAEwAAAJwAAAD7AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAMwAAAA7AAAAAAAA
        AAAAAAAAAAAAswAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+wAAAJwAAAATAAAAAAAAAAAAAAAAAAAAAAAA
        AB4AAAB+AAAAzwAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA6AAAAJ0AAABBAAAAAAAA
        AAAAAAAAAAAAAAAAAIsAAAD/AAAA/wAAAP8AAAD9AAAAzwAAAH4AAAAeAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAEwAAAEYAAABsAAAAgwAAAIgAAAB3AAAAVQAAACYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAvAAAAiAAAAIMAAABsAAAARgAAABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2AAAAewAA
        AIUAAABXAAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAABXAAAAhQAAAHsAAAA2AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAowAA
        AP4AAAD/AAAA/wAAAP8AAADbAAAAKQAAAAAAAAAAAAAAAAAAAAAAAAApAAAA2wAAAP8AAAD/AAAA/wAA
        AP4AAACjAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AIYAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADbAAAABwAAAAAAAAAAAAAABwAAANsAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAACGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAGAAAA8gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABXAAAAAAAAAAAAAABWAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPIAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACgAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAIUAAAAAAAAAAAAA
        AIQAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAHgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAewAA
        AAAAAAAAAAAAegAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAHgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP4AAAA2AAAAAAAAAAAAAAA2AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAANgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAAA/AAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAowAAAAAAAAAAAAAAAAAAAAAAAACiAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD8AAAASQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAAA2AAA
        AP8AAAD/AAAA8gAAAIYAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAUAAACGAAAA8gAAAP8AAAD/AAAA2AAA
        AEkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAHgAAACgAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAKAAA
        AB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////////////8AAAYAAAAGAAAABgAAAAYAAAAGAAAA
        BgAAAAwAgAAcAeAAeAf8A/A/////////////B+D//APAP/wBgD/4AYAf+AGAH/gBgB/8AYA//APAP/4D
        wH//j/H///////////////////////////8=
</value>
  </data>
</root>